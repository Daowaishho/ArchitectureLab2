@startuml

abstract class SceneFactory {
    + {static} createMap(): Map
    + {static} createWeather(): Weather
    + {static} createSound(): Sound
}

class SceneAFactory {
    + {static} createMap(): Map
    + {static} createWeather(): Weather
    + {static} createSound(): Sound
}

class SceneBFactory{
    + {static} createMap(): Map
    + {static} createWeather(): Weather
    + {static} createSound(): Sound
}

abstract class Map {
    + display(): void
}

class AMap{
    + display(): void
}

class BMap {
    + display(): void
}

abstract class Weather {
    + display(): void
}

class AWeather {
    + display(): void
}

class BWeather {
    + display(): void
}

abstract class Sound {
    + display(): void
}

class ASound {
    + display(): void
}

class BSound {
    + display(): void
}

AWeather -down-|> Weather
BWeather -down-|> Weather

ASound -down-|> Sound
BSound -down-|> Sound

AMap -down-|> Map
BMap -down-|> Map

SceneAFactory .down.> AWeather
SceneAFactory .down.> ASound
SceneAFactory .down.> AMap

SceneBFactory .down.> BWeather
SceneBFactory .down.> BSound
SceneBFactory .down.> BMap

SceneAFactory -up-|> SceneFactory
SceneBFactory -up-|> SceneFactory

note as annotation
  AUTHOR : ShuJie Huang
  DATE : 2022.12.17 20:18
end note
@enduml
